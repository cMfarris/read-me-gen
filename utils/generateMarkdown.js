// TODO: Create a function that returns a license badge based on which license is passed in
// If there is no license, return an empty string
function renderLicenseBadge(license) {
  if (license == "Apache 2.0") {
    return `## License
  [![badge](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0) <br /> This application is covered by the ${license} license.`;

  } else {
    return `## License
  [![badge](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) <br /> This application is covered by the ${license} license.`;
  }
  // let section = {
  //  'Apache 2.0': function () {
  //       return `## License
  // [![badge](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0) <br /> This application is covered by the ${choice} license.`;
  //     },
  //     'MIT': function () {
  //       return `## License
  //       [![badge](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) <br /> This application is covered by the ${choice} license.`;
  //     },

  // };
  //   return section[license]();

}

// TODO: Create a function to generate markdown for README
function generateMarkdown(data) {
  console.log(data)
  return `# 
  <title> ${data.title}
};

${renderLicenseBadge(data.license)}<br />
#Name
${data.name}
##Table of Contents
-[Name](#name)
-[Statement](#statement)
-[Usage](#usage)
-[License](#license)
-[Contributing](#contributing)
-[Test](#test)
-[Questions](#questions)
##statement
${data.statement}
##usage
${data.usage}
##Contributing
${data.contributing}
##Test
${data.test}
##Questions
${data.questions}
This README was generated by ${data.contributing} using the [README.generator.]`;
}



module.exports = generateMarkdown;









